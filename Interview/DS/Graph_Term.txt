DS_Data Structure

Graph_Term
------------------------------------------------------------

그래프(graph)란?
-> 표현력이 풍부하여 상당한 제약을 가해서 실제
    응용에 많이 사용되고 있습니다.
-> G = (V, E)
    : V는 공백이 아닌 [노드 or 정점(Veriex)]의 유한 집합
      정점만을 표현할 때는 V(G)라고 표기
    : E는 상이한 두 정점을 잇는 간선(Edge)의 유한 집합으로
     정점만을 표현할 때는 V(G)라고 표기

1) 방향 그래프, 무방향 그래프
-> 무방향 그래프(undirected graph)
    : 간선을 표현하는 두 정점의 쌍에 순서__(방향이 없는 그래프) 
    : 두 정점 V0와 V1을 잇는 간선은 똑같은 간선을 나타낸다.
-> 방향 그래프(directed graph)
    : 모든 간선을 순서가 있는 두 정점의 쌍으로 표현__(방향이 없는 그래프)
    : 하나의 간선을 V0 -> V1을 <V0, V1>이라 하고,
     V0를 tail, V1를 Head라고 합니다.
    : 방향 그래프에서는 <V0,V1> 과 <V1,V0> 는 다른 간선입니다.
      방향 그래프에서는 이 간선을 아크(arc)라고도 합니다.


2) 완전 그래프(complete graph)
-> 완전 그래프란 간선을 최대한으로 가진 그래프
-> n개의 정점을 가진 무방향 그래프의 최대 간선 수는 n(n-1)2
    n개의 정점을 가진 방향 그래츠의 최대 간선은 n(n-1)개가 된다.


3) 인접(adjacent)과 부속(incident)
-> 인접 : 간선(V0,V1)가 무방향 그래프G의 간선일때,
            노드 V0와 V1은 서로 인접한다고 합니다.
-> 부속 : 간선(V0,V1)가 무방향 그래츠G의 간선일때,
            간선(V0,V1)은 정점 V0와 V1의 부속이 된다고 한다.

// 인접 -> 무방향 그래프의 간선이 G의 간선일때 인접한다고 한다.
   부속 -> 무방향 그래프의 간선이 G의 간선은
              정점 V0와 V1의 부속이 된다고 합니다.
인접은 수평적이고, 부속은 대각선이다.


4) 부분 그래프(sub graph)
-> 그래프 A에 부분 그래프라고 한다.
// <(a)>라는 그래프에서 부분을 가지고 그린 그래프를 의미합니다.


5) 경로(path)
-> 그래프 a와 같이 V0부V3까지 간선으로 연결된 
    정점의 순서 리스트(V0,V1,V2,V3)를 '경로'하 한다.
-> 방향 그래프의 경우는 '방향 경로'
    이때 '단순 경로'라 함은 모두 상이한 간선으로 구성된 경로이다.
// 단순 경로는 모두 같은 방향의 간선으로 구성된 경로입니다.



6) 사이클(cycle)
-> 첫 번째 저점과 마지막 정점이 동일한 단순 경로

 : 무방향 그래프에서 사이클의 길이는 항상 3이상,
 : 방향 그래츠에서는 사이클의 길이는 항상 2이상이다.
// 이러한 사이클이 없는 그래프를 DAG(Directed Acyclic Graph)라고 한다.


7) 강한 연결(strongly connected), 약한 연결(weakly connected)
 : 강한연결 -> 그래프는 모든 정점이 양방향을 경로가 있다.
                  모든 노드가 연결이 되어있다는 의미이다.
 : 약한연결 -> 정점 V1 -> V0는 가능하지만, V0 -> V1은
                  연결되어 있지 않아 약한 연결 그래프이다.


8) 차수(degree)
 : 정점의 차수(degree of a node)
--> 그 정점에 부속된 간선의 수
 : 진입 차수(in degree)
--> 그래프가 방향그래프라면 정점v의 진출 차수는 
     정점v를 head로 하는 아크의 수를 말합니다.
 : 진출 차수(out degree)
--> 그래프가 방향그래프라면 정점v의 진출 차수는 
     정점v를 tail로 하는 아크의 수를 말합니다.
// 진입 차수 : 정점에 오는 갯수
   진출 차수 : 정점에서 나가는 갯수














