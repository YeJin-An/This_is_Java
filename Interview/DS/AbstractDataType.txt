DS_DataStructure

Abstract Data Type (추상 자료형)

자료구조 관점에서 ADT라고 줄리는 추상자료형에 대해
공부해보았다.
-------------------------------------------------------------

추상자료형(ADT)의 이해

추상자료형이란?
-> 구체적인 기능의 진행과정을 언급하지 않고,
    순수하게 기능이 무엇인지를 나열한 것.


지갑의 ADT를 나열하는 것은 지갑의 기능을 나열하는 것과 같다.
1) 카드의 삽입
2) 카드의 추출
3) 동전의 삽입
4) 동전의 추출
5) 지폐의 삽입
6) 지페의 추출

" 지갑을 열고 동전 주머니를 찾아서 동전 주머니의 지처를 내린다.
  그리고 동전 주머니에 동전을 넣는다.
  이어서 동전 주머니의 지퍼를 올린 다음 마지막으로 지갑을 닫는다. "

// 위의 예시는 지갑이 가진 기능 중 동전의 삽입 기능의 구체적인 진행과정
   ADT는 구체적인 진행과정을 언급하지 않고 
   순수하게 기능이 무엇인지 나열하는 것이다.

---------------------------------------------------------------------------------

추상자료형와 자료형의 관계
-> 추상자료형은 기능을 나열하는 개념인데 자료형과 어떤 관계일까?
-> int와 같은 자료형과 관계의 명세는 어떤 관계가 있는 것일까?

struct Wallent
{
    int coin100Num;  //100원짜리 동전의 수
    int bill5000Num;  //5000원짜리 동전의 수
}

// 위의 경우 Wallet이라는 새로운 자료형의 구조체를 정의했다.
// 이처럼 구조체 모두 새로운 자료형의 정의이다
// 구조체를 정의하는 것만으로 Wallet이라는 자료형은
   온전하게 사용할 수 없다.

자료형 int는 기본 연산뿐만 아니라, Wallet을 기반으로 제공할 수 있는
[기능 관련 연산]도 함수를 이용해 정의한다.

int TakeOutMoney(Wallet* pw, int coinNum, int billNum);
void PutMoney(Wallet* pw, int coinNum, int billNum);
// '자료형'은 정의뿐만 아니라 '기능' 혹은 '연산'과 관련된 내용을
   [명시]함으로써 자료형의 정의가 [완성]이 된다는 것이다.

-------------------------------------------------------------------------------

구조체 Wallet의 추상자료형 정의

1. int TakeOutMoney(Wallet* pw, int coinNum, int billNum);
-> 첫 번째 인자로 전달된 주소의 지갑에서 돈을 꺼낸다.
-> 두 번째 인자로 꺼낼 동전의 수
-> 세 번째 인자로 꺼낼 지폐의 수를 전달한다.
// 꺼내고자 하는 동의 총액이 반환된다. 그리고 그만큼 돈은 차감된다.

2. void PutMoney(Wallet* pw, int coinNum, int billNum);
-> 첫 번째 인자로 전달된 주소의 지갑에 돈을 넣는다.
-> 두 번째 인자로 놓을 동전의 수
-> 세 번재 인자로 넣을 지폐의 수를 전달한다.
// 넣은 만큼 동전과 지폐의 수가 증가한다.

자료구조는 내부 구현(진행과정)을 알지 못해도 활용할 수 있는데,
잘 활용하기 위해서는 ADT에 대한 정의가 제대로 되어야 
접근할 수 있다고 생각한다.

C++의 STL의 내부 구조를 모르더라도 제대로 활용하기 위해서는
ADT의 정의가 필수 있다




















