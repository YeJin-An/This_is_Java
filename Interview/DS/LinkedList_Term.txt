DS_Data Structure

LinkedList_Term
------------------------------------------------------------

2. 데이터의 표현(연결리스트)


Q. 연결리스트란?
-> 배열이 가지고 있는 인덱스라는 장점을 버리고
    데이터 적재하는 장점을 취한 자료구조
-> 배열와 달리 
    원소의 물리적 순서와 리스트의 논리적 순서의 논리적 순서가
    꼭 일치할 필요가 없다.
// 물리적 메모리에 연속된 공간에 
   데이터가 적재되어있지 않아도 된다는 것이다.

 --> 헤더 노드 + [노드들] + 꼬리노드

[ 장점 ]
 : 공간의 크기가 필요에 따라 정해진다.
--> 데이터가 각각의 노드로 구성되어 있다.
--> 필요에 따라 추가/삭제가 용이하여 노드의 트기가 정해진다.
--> 사용하지 않는 공간의 낭비를 줄인다.

 : 삭제, 삽입의 기능이 빠르다.
--> 데이터의 공간을 밀고 당기는 작업이 없어
      다음 노드의 주소만 변경하면 되기 때문에 빠르다.

[ 단점 ]
 : 데이터의 접근이 배열에 비해서 느리다.
--> 인덱스로 접근하는 배열과 달리
     연결리스트는 데이터를 순회하면서 접근하여야 하며 느리다.

 : 주소 공간의 메모리가 필요하다.
--> 노드로 구성되어 메모리 공간의 크기가 정해져 있지 않다.
--> 배열은 3개의 데이터를 저장할때, 3개의 공간이 필요하지만,
     연결리스트는 6개의 공간이 필요하게 된다.
// 프로그램에 따른 데이터의 표현방법을 잘 선택해야 한다.

<배열과 연결리스트의 메모리 공간비교>




















