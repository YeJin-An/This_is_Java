CS_Computer Architecture

ARM 프로세서
 : 메모리에 저장된 명령어들을 실행하는 [유한 상태 오토마톤]

------------------------------------------------------------------------------------------------------------------

ARM : Advanced RISC Machine
-> 진보된 RISC 기기의 약자로 ARM의 핵심은 RISC이다.

RISC : Reduced Instruction Set Compution (감소된 명령 집합 컴퓨팅)

// "단순한 명령 집합을 가진 프로세서"가
   "복잡한 명령 집합을 가진 프로세서" 보다 훨씬 더 효율적이지 않을까? 로 탄생함.


ARM
-> 칩의 기본 설계구조만 만든다
-> 실제 기능 추가와 최적화 부분은 개별 반도체 제조사의 영역으로 맞긴다
-> 물리적 설계는 같아도, 명령 집합이 모두 달라 서로 다른 칩이 되기도 하는 것이 ARM
.. 나머진 나중에 기록


ARM의 장점은?
-> 소비자 있어 ARM은 '생태계'의 하나라고 생각할 수 있다.
-> ARM을 위해 개발된 프로세서는 오직 ARM 프로세서가 탑재된 기기에서만 실행할 수 있다.
   (즉, x86 CPU프로세서 기반 프로그램에서는 ARM 기반 기기에서 실행할 수 없음)
// ARM에서 실행되던 프로그램을 x86 프로세서에서 실행되도록 하려면
  프로그램에 수정이 가해져야만 한다.


하지만, 하나의 ARM 기기에 동적하는 OS는 다른 ARM 기반 기기에서도 잘 동작한다.
이러한 장점이 있어 수많으 버전의 안드로이드가 탄생하게 되었고, 
HP나 블랙베리의 태블릿에도 안드로이드가 탑재될 수 있는 가능성이 생기게 된 것이다
// ARM을 만드는 기업들을 통해 전력 소모를 줄이고 성능을 높이기 위해 설계를 개선하며 노력하고 있다.


-----------------------------------------------------------------------------------------------------------------

[오늘날의 태블릿, 미래의 컴퓨터]__ARM 프로세서란 무엇일까?

"ARM" 프로세서는 인텔(Intel) x86 CPU를 사용하는 기존의 노트북이나 컴퓨터와 구분하고
차별화 하기 위한 핵심으로 자주 이야기가 나오고 있습니다.

Q. ARM이란 무엇일까요??
-> ARM의 핵심은 RISC
              ARM(Advanced RISC Machine)_진보된 RISC 기기
RISC(Reduced Instruction Set Computing)_줄여진 명령 집합 컴퓨팅


RISC는 넓게 보자면 프로세서를 위한 일종의 설계 철학이라고 할 수 있음.
-> 단순한 명령 집합을 가진 프로세서가 복잡한 명령 집합을 가진 프로세서 보다
    훨씬 더 효율적일 것이라는 믿음으로부터 생겨났다.

모든 ARM프로세서는 RISC설계를 염두에 두고 만들어 졌다.
-> RISC 설계는 고려 사항일뿐 그렇게 많은 것을 의미하고 있는 건 아닙니다.
-> RISC 자체는 설계에 대한 접근 방식일뿐 구조를 의미하지는 않는다.
// 그렇지만, 여전히 RISC의 기본을 이해하는 것은 ARM을 이해하기 위한 기본 틀을 형성해 준다.

ARM의 기본
-> 자신의 설계를 끊김이 없는, 연관성이 있는 하나의 가족으로 취급합니다.
-> 새로운 변경 사항이 생겨도 단지 새로운 버전 번호를 부여 받을 뿐입니다!!

https://sergeswin.com/611/
https://m.blog.naver.com/PostList.naver?blogId=supergrammer
